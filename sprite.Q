[General]
SyntaxVersion=2
BeginHotkey=121
BeginHotkeyMod=0
PauseHotkey=19
PauseHotkeyMod=0
StopHotkey=123
StopHotkeyMod=0
RunOnce=1
EnableWindow=
MacroID=2ecd658c-7d8f-4f04-b29b-16c9d4a4883a
Description=ΩÁ√Ê
Enable=0
AutoRun=0
[Repeat]
Type=0
Number=1
[SetupUI]
Type=1
QUI=Form1
[Relative]
SetupOCXFile=
[Comment]

[Attachment]



[UIPackage]



[Script]
Dim isLog
Dim tidyFirst
Dim healFirst
Dim teammateNameArray
Dim teamSize
Dim place
Dim isCheckOffline
Dim isCheckHurt
Dim stopWithoutFight
Dim numToTidy
Dim stopWhenFull
Dim autoResume
Dim resumeType
Dim manaSum
Dim food
Dim sale
Dim resumeManaArray
Dim resumeIndexArray
resumeIndexArray = Array(0,0,0,0,0)

Dim marshal_array
Dim drop_array

Dim offsetX
Dim offsetY
Dim food_color

Dim back_path
Dim hospital_path
Dim exit_hospital_path
Dim sale_path
Dim exit_sale_path
Dim exit_city_path

Dim bargin_figure_array

Dim tidy_times
Dim fight_times
Dim all_fight_times
Dim empty_count

Dim elasticFight
Dim elasticFightNum
Dim noFullHeal
Dim noFullHealNum
Dim healNum
Dim figureColor
figureColor = ""

Dim settings
//TracePrint settings("tidy")("ø≤¥Â")("marshal")(0)("color1")

Sub initParams
	
	Import "vbsJson.vbs"
	//PutAttachment ".","settings2.json"
	//str = Replace(Plugin.File.ReadFileEx("C:\Users\eiven\Downloads\settings2.json"), "|", vbCrLf)
	str = Replace(Plugin.File.ReadFileEx(".\settings2.json"), "|", vbCrLf)
	Set json = New vbsJson
	Set settings = json.Decode(str)
	
	tidyFirst = Form1.tidyFirstCheck.Value
	healFirst = Form1.healFirstCheck.Value
	placeArray = Split(Form1.placeInput.List, "|")
	place = placeArray(Form1.placeInput.ListIndex)
	
	isCheckOffline = Form1.checkOfflineCheck.Value
	isCheckHurt = Form1.checkHurtCheck.Value
	stopWithoutFight = CInt(Form1.stopWithoutFightInput.Text)
	numToTidy = CInt(Form1.numToTidyInput.Text)
	stopWhenFull = Form1.stopWhenFullCheck.Value
	autoResume = Form1.autoResumeCheck.Value
	
	resumeTypeArray = Split(Form1.resumeTypeCheck.List, "|")
	resumeType = resumeTypeArray(Form1.resumeTypeCheck.ListIndex)
	
	manaSum = CInt(Form1.manaSumInput.Text)
	foodArray = Split(Form1.foodCheck.List, "|")
	food = foodArray(Form1.foodCheck.ListIndex)
	
	sale = Form1.saleCheck.Value
	
	teammateNameArray = Split(Form1.teammate.List, "|")
	team_size = UBound(teammateNameArray) + 1
	
	resumeManaArray = Split(Form1.resumeList.List, "|")
	ind1 = 0
	For team_size
		resumeIndexArray(ind1) = 0
		ind2 = 0
		For UBound(resumeManaArray) + 1
			If teammateNameArray(ind1) = resumeManaArray(ind2) Then 
				resumeIndexArray(ind1) = 1
				Exit For
			End If
			ind2 = ind2 + 1
		Next
		ind1 = ind1 + 1
	Next
	
	
	isLog = Form1.logCheck.Value
	offsetX = CInt(Form1.offsetXInput.Text)
	offsetY = CInt(Form1.offsetYInput.Text)
	
	food_color = settings("food_color")(food)
	marshal_array = settings("tidy")(place)("marshal")
	drop_array = settings("tidy")(place)("drop")
	back_path = settings("back_to_city")(place)
	hospital_path = settings("hospital")(place)
	exit_hospital_path = settings("exit_hospital")(place)
    sale_path = settings("go_to_sale")(place)
    exit_sale_path = settings("exit_sale")(place)
	exit_city_path = settings("exit_city")(place)
	
	bargin_figure_array = settings("bargin")(place)

	elasticFight = Form1.elasticFightCheck.Value
	elasticFightNum = CInt(Form1.elasticFightNumInput.Text)
	noFullHeal = Form1.noFullHealCheck.Value
	noFullHealNum = CInt(Form1.noFullHealNum.Text)
	healNum = 0
	
	TracePrint "healFirst: " & healFirst
	TracePrint "teammateNameArray size: " & team_size
	TracePrint "placeArray: " & placeArray
	TracePrint "place: " & place
	TracePrint "checkOffline: " & checkOffline
	TracePrint "isCheckHurt: " & isCheckHurt
	TracePrint "stopWithoutFight: " & stopWithoutFight
	TracePrint "numToTidy: " & numToTidy
	TracePrint "stopWhenFull: " & stopWhenFull
	TracePrint "autoResume: " & autoResume
	TracePrint "resumeType: " & resumeType
	TracePrint "foodArray: " & foodArray
	TracePrint "food: " & food
	TracePrint "food_color: " & food_color
	TracePrint "sale: " & sale
	TracePrint "resumeIndexArray: "
	ind1 = 0
	For team_size
		TracePrint resumeIndexArray(ind1)
		ind1 = ind1 + 1
	Next
	
	TracePrint "isLog: " & isLog
	TracePrint "offsetX: " & offsetX
	TracePrint "offsetY: " & offsetY
	
	TracePrint "marshal_array size: " & UBound(marshal_array) + 1
	TracePrint marshal_array(0)("color1")
	TracePrint marshal_array(1)
	
	TracePrint "elasticFight: " & elasticFight
	TracePrint "elasticFightNum: " & elasticFightNum
	TracePrint "noFullHeal: " & noFullHeal
	TracePrint "noFullHealNum: " & noFullHealNum
	TracePrint "bargin_figure_array size: " & UBound(bargin_figure_array) + 1
End Sub

Event Form1.LoadOver

	Call reloadCG

End Event

Sub reloadCG

    Form1.CheckBox1.Visible = False
    Form1.CheckBox2.Visible = False
    Form1.CheckBox3.Visible = False
    Form1.CheckBox4.Visible = False
    Form1.CheckBox5.Visible = False
    Form1.CheckBox6.Visible = False
    
    Form1.CheckBox8.Visible = False
    Form1.CheckBox9.Visible = False
    Form1.CheckBox10.Visible = False
    Form1.CheckBox11.Visible = False
    Form1.CheckBox12.Visible = False
    
    Form1.CheckBox1.Value = 0
    Form1.CheckBox2.Value = 0
    Form1.CheckBox3.Value = 0
    Form1.CheckBox4.Value = 0
    Form1.CheckBox5.Value = 0
    
    Form1.CheckBox8.Value = 0
    Form1.CheckBox9.Value = 0
    Form1.CheckBox10.Value = 0
    Form1.CheckBox11.Value = 0
    Form1.CheckBox12.Value = 0
    
	HwndEx = Plugin.Window.Search("CG°§÷¬æ¥æ≠µ‰")
	dim cgWnds   
	cgWnds = Split(HwndEx, "|")   
	If UBound(cgWnds) <= 0 Then  
    	MsgBox("Œ¥ƒ‹’“µΩƒß¡¶±¶±¥¥∞ø⁄")
	End If
	
	cgNum = UBound(cgWnds)
	title = Plugin.Window.GetText(cgWnds(0))
	Form1.CheckBox1.Caption = title
	Form1.CheckBox1.Visible = true
	
	If cgNum > 1 Then 
		title2 = Plugin.Window.GetText(cgWnds(1))
		Form1.CheckBox2.Caption = title2
		Form1.CheckBox2.Visible = true
	End If
	
	If cgNum > 2 Then 
		title = Plugin.Window.GetText(cgWnds(2))
		Form1.CheckBox3.Caption = title
		Form1.CheckBox3.Visible = true
	End If
	
	If cgNum > 3 Then 
		title = Plugin.Window.GetText(cgWnds(3))
		Form1.CheckBox4.Caption = title
		Form1.CheckBox4.Visible = true
	End If
	
	If cgNum > 4 Then 
		title = Plugin.Window.GetText(cgWnds(4))
		Form1.CheckBox5.Caption = title
		Form1.CheckBox5.Visible = true
	End If
	
	If cgNum > 5 Then 
		title = Plugin.Window.GetText(cgWnds(5))
		Form1.CheckBox6.Caption = title
		Form1.CheckBox6.Visible = true
	End If
	
End Sub

Event Form1.CheckBox1.Click
	name = Form1.CheckBox1.Caption
	If Form1.CheckBox1.Value = 1 Then 
		addTeammate (name)
	Else 
		deleteTeammate(name)
	End If
End Event

Event Form1.CheckBox2.Click
	name = Form1.CheckBox2.Caption
	If Form1.CheckBox2.Value = 1 Then 
		addTeammate (name)
	Else 
		deleteTeammate(name)
	End If
End Event

Event Form1.CheckBox3.Click
	name = Form1.CheckBox3.Caption
	If Form1.CheckBox3.Value = 1 Then 
		addTeammate (name)
	Else 
		deleteTeammate(name)
	End If
End Event

Event Form1.CheckBox4.Click
	name = Form1.CheckBox4.Caption
	If Form1.CheckBox4.Value = 1 Then 
		addTeammate (name)
	Else 
		deleteTeammate(name)
	End If
End Event

Event Form1.CheckBox5.Click
	name = Form1.CheckBox5.Caption
	If Form1.CheckBox5.Value = 1 Then 
		addTeammate (name)
	Else 
		deleteTeammate(name)
	End If
End Event

Event Form1.CheckBox6.Click
	name = Form1.CheckBox6.Caption
	If Form1.CheckBox6.Value = 1 Then 
		addTeammate (name)
	Else 
		deleteTeammate(name)
	End If
End Event

Sub test(hwnd)
	TracePrint hwnd
	sRect = Plugin.Window.GetWindowRect(hwnd)
	rect = Split(sRect, "|")
	TracePrint "i: " & i & ", wnd: " & wnd & ",ret: " & sRect
	Plugin.Bkgnd.MoveTo hwnd, 300, 300
	Plugin.Bkgnd.LeftDown hwnd, 300, 300
	Delay 200
	Plugin.Bkgnd.LeftUp hwnd, 300, 300
	
	Delay 1500
	Plugin.Bkgnd.MoveTo hwnd, 150, 150
	Plugin.Bkgnd.LeftDown hwnd, 150, 150
	Delay 200
	Plugin.Bkgnd.LeftUp hwnd, 150, 150
	
	Delay 1500
	Plugin.Bkgnd.MoveTo hwnd, 300, 300
	Plugin.Bkgnd.LeftDown hwnd, 300, 300
	Delay 200
	Plugin.Bkgnd.LeftUp hwnd, 300, 300
	
	Delay 1500
	Plugin.Bkgnd.MoveTo hwnd, 150, 150
	Plugin.Bkgnd.LeftDown hwnd, 150, 150
	Delay 200
	Plugin.Bkgnd.LeftUp hwnd, 150, 150
	//Plugin.Bkgnd.LeftUp hwnd, 300, 300
End Sub

Dim charts
Event Form1.chartSelectConfirm.Click
	
	If Form1.teammate.List = "" Then 
		MsgBox ("ƒ„Œ¥—°‘ÒÕ≈∂”≥…‘±£¨«Î÷ÿ–¬—°‘Ò!")
		Call reloadCG
		Exit Event
	End If
	
	teammateNameArray = Split(Form1.teammate.List, "|")
	teamSize = UBound(teammateNameArray)
	If teamSize > 4 Then 
		MsgBox ("◊È∂”≥…‘±—°‘Ò≤ªƒ‹≥¨π˝5∏ˆ£¨«Î÷ÿ–¬—°‘Ò!")
		Form1.teammate.List = ""
		Call reloadCG
		Exit Event
	End If
	
	Form1.chartSelectConfirm.Visible = False
	Form1.reloadButton.Visible = False
	Form1.Container1.Visible = False
	Form1.setting.Visible = True
	Form1.tip.Caption = "—°œÓ…Ë÷√"
	Form1.matricContainer.Visible = True
	
	//≤πƒß√˚µ•
	Form1.CheckBox8.Caption = teammateNameArray(0)
	Form1.CheckBox8.Visible = True
	Form1.CheckBox8.Value = 1
	//addResumeList(name)
	
	TracePrint "teamsize: " & teamSize
	If teamSize > 0 Then 
		Form1.CheckBox9.Caption = teammateNameArray(1)
		Form1.CheckBox9.Visible = True
	End If
	
	If teamSize > 1 Then 
		Form1.CheckBox10.Caption = teammateNameArray(2)
		Form1.CheckBox10.Visible = True
	End If
	
	If teamSize > 2 Then 
		Form1.CheckBox11.Caption = teammateNameArray(3)
		Form1.CheckBox11.Visible = True
	End If
	
	If teamSize > 3 Then 
		Form1.CheckBox12.Caption = teammateNameArray(4)
		Form1.CheckBox12.Visible = True
	End If
	
End Event

Sub addTeammate(name)
	teammateListArray = Split(Form1.teammate.List, "|")
	teammateListNum = UBound(teammateListArray)
	
	index = 0
	For teammateListNum + 1
		If name = teammateListArray(index) Then 
			Exit Sub
		End If
		index = index + 1
	Next
	
	Form1.teammate.AddItem(name)
End Sub

Sub deleteTeammate(name)
	teammateListArray = Split(Form1.teammate.List, "|")
	teammateListNum = UBound(teammateListArray)
	
	findIndex = -1
	index = 0
	For teammateListNum + 1
		If name = teammateListArray(index) Then 
			findIndex = index
			Exit For
		End If
		index = index + 1
	Next
	
	If findIndex <> - 1  Then 
		Form1.teammate.RemoveItem(findIndex)
	End If
	
End Sub

Sub addResumeList(name)
	resumeListArray = Split(Form1.resumeList.List, "|")
	resumeListNum = UBound(resumeListArray)
	
	index = 0
	For resumeListNum + 1
		If name = resumeListArray(index) Then 
			Exit Sub
		End If
		index = index + 1
	Next
	
	Form1.resumeList.AddItem(name)
End Sub

Sub deleteResumeList(name)
	resumeListArray = Split(Form1.resumeList.List, "|")
	resumeListNum = UBound(resumeListArray)
	
	findIndex = -1
	index = 0
	For resumeListNum + 1
		If name = resumeListArray(index) Then 
			findIndex = index
			Exit For
		End If
		index = index + 1
	Next
	
	If findIndex <> - 1  Then 
		Form1.resumeList.RemoveItem(findIndex)
	End If
	
End Sub

Event Form1.autoResumeCheck.Click
	If Form1.autoResumeCheck.Value = 1 Then 
		Form1.resumeSetting.Visible = True
		Form1.resumeListLabel.Visible =True
		Form1.resumeList.Visible = True
	Else 
		Form1.resumeSetting.Visible = False
		Form1.resumeListLabel.Visible = False
		Form1.resumeList.Visible = False
	End If
End Event
Event Form1.resumeTypeCheck.SelectChange
	If Form1.resumeTypeCheck.ListIndex = 0 Then 
		Form1.foodCheck.Visible = True
		Form1.saleCheck.Visible = False
	Else 
		Form1.foodCheck.Visible = False
		Form1.saleCheck.Visible = True
	End If
End Event

Event Form1.reloadButton.Click
	Form1.teammate.List = ""
	Form1.resumeList.List = ""
	Call reloadCG
End Event

Event Form1.CheckBox8.Click
	name = Form1.CheckBox8.Caption
	If Form1.CheckBox8.Value = 1 Then 
		addResumeList(name)
	Else 
		deleteResumeList(name)
	End If
End Event

Event Form1.CheckBox9.Click
	name = Form1.CheckBox9.Caption
	If Form1.CheckBox9.Value = 1 Then 
		addResumeList(name)
	Else 
		deleteResumeList(name)
	End If
End Event

Event Form1.CheckBox10.Click
	name = Form1.CheckBox10.Caption
	If Form1.CheckBox10.Value = 1 Then 
		addResumeList(name)
	Else 
		deleteResumeList(name)
	End If
End Event

Event Form1.CheckBox11.Click
	name = Form1.CheckBox11.Caption
	If Form1.CheckBox11.Value = 1 Then 
		addResumeList(name)
	Else 
		deleteResumeList(name)
	End If
End Event

Event Form1.CheckBox12.Click
	name = Form1.CheckBox12.Caption
	If Form1.CheckBox12.Value = 1 Then 
		addResumeList(name)
	Else 
		deleteResumeList(name)
	End If
End Event

Event Form1.Load

	loadErr = 0
	
	Form1.checkOfflineCheck.Value = 1
	Form1.checkHurtCheck.Value = 1
	Form1.stopWhenFullCheck.Value = 1
	Form1.autoResumeCheck.Value = 1
	Form1.teammate.List = ""
	
	Import "vbsJson.vbs"
	//PutAttachment ".", "settings2.json"
	Delay 4000

	//str = Replace(Plugin.File.ReadFileEx("C:\Users\eiven\Downloads\settings2.json"), "|", vbCrLf)
	str = Replace(Plugin.File.ReadFileEx(".\settings2.json"), "|", vbCrLf)
	TracePrint str
	Set json = New vbsJson
	Set settings = json.Decode(str)
	
	// µÿÕº—°‘Ò œ¬¿≠¡–±Ì≥ı ºªØ
	Dim map
	map = ""
	map_list = settings("map_list")

	If IsEmpty(map_list) Then 
		MsgBox ("≥ı ºªØ¥ÌŒÛ!")
		loadErr = 1
		Goto exitOnErr
	End If
	
	i = 0
	For UBound(map_list)
		map = map & map_list(i) & "|"
		i = i + 1
	Next
	map = map & map_list(i)
	Form1.placeInput.List = map
	Form1.placeInput.ListIndex = 0

	//¡œ¿Ì—°‘Ò œ¬¿≠¡–±Ì≥ı ºªØ
	Dim foods
	food_list = settings("food")
	i = 0
	For UBound(food_list)
		foods = foods & food_list(i) & "|"
		i = i + 1
	Next
	foods = foods & food_list(i)
	Form1.foodCheck.List = foods
	Form1.foodCheck.ListIndex = 0
	
	Rem exitOnErr
	If loadErr = 1 Then 
		ExitScript
	End If
	
End Event

Delay 2000

If isLog = 1 Then 
	LogStart "c:\game.log"
End If

Call initParams
// ------------------------’˝ ΩΩ≈±æø™ º----------------------------------------


UserVar base_x=328 ""
UserVar base_y=12  ""
UserVar need_heal=0 "–Ë“™÷Œ¡∆"
UserVar need_sale=0 "–Ë“™¬Ù"
UserVar eat_times=0 "≥‘¡œ¿Ì¥Œ ˝"
Dim windName
//windName = Array("∂´∑Á - CG°§÷¬æ¥æ≠µ‰ Ver 3.60.82 [ƒ¡—Ú◊˘]","±±∑Á - CG°§÷¬æ¥æ≠µ‰ Ver 3.60.82 [ƒ¡—Ú◊˘]","÷–∑Á - CG°§÷¬æ¥æ≠µ‰ Ver 3.60.82 [ƒ¡—Ú◊˘]","Œ™ - CG°§÷¬æ¥æ≠µ‰ Ver 3.60.82 [ƒ¡—Ú◊˘]","∏Ë…˘ - CG°§÷¬æ¥æ≠µ‰ Ver 3.60.82 [ƒ¡—Ú◊˘]")
windName = teammateNameArray
Dim pos(5)
Dim pos1
Dim pos2
Dim pos3
Dim pos4
Dim pos5

healNum = 0
Form1.healNumLabel.Caption = CStr(healNum)
fix_x = 0
fix_y = 0

Call initPosition
//Call stop
//Call recognize_code
//ExitScript
//base_x_y
//move_to_nurse 
//healing
If tidyFirst = 1 Then 
	tidy
End If

If healFirst = 1 Then 
	go_to_heal
End If

//resume_mana (0)
//find_diamon
//check_full
//EndScript

s = 0
empty_count = 0
Form1.emptyCountLabel.Caption = Cstr(empty_count)
all_fight_times = 0
Form1.allFightTimeLabel.Caption = Cstr(all_fight_times)
fight_times = 0
Form1.fightTimeLabel.Caption = Cstr(fight_times)
tidy_times = 0
Form1.tityTimeLabel.Caption = Cstr(tidy_times)
fight_rnd = rnd(1, 10)
TracePrint "fight_rnd: " & fight_rnd

If elasticFight = 1 Then 
	numToTidy = numToTidy + elasticFightNum
End If

While s = 0

	Form1.numToTidyLabel.Caption = CStr(numToTidy)
	Call need_to_hospital()

	If isCheckOffline = 1 Then 
		Call offline
	End If
	
	Call wait_if_fight
	
	fight_times = fight_times + 1
	TracePrint "fight_times:" & fight_times
	If fight_times > numToTidy Then 
		tidy 
		fight_times = 0
		//fight_rnd = rnd(1, 10)
		TracePrint "fight_rnd: " & fight_rnd
	End If
	
	Form1.allFightTimeLabel.Caption = Cstr(all_fight_times)
	all_fight_times = all_fight_times + 1
	Form1.fightTimeLabel.Caption = Cstr(fight_times)

	Call move_for_fight
	
	Delay 100
Wend

Function need_to_hospital()
	
	TracePrint "x: " & pos1(0) + 466 & ", y:" & pos1(1) + 400
	GetColor = GetPixelColor(pos1(0) + 474, pos1(1) + 400)
	TracePrint GetColor


	// 1 mana
	If resumeIndexArray(3) = 1 Then 
		IfColor pos1(0) + 593 + manaSum, pos1(1) + 328, "E0E0E", 0 Then
			TracePrint "out of mana 1, shall go to hospital"
			resume_mana(3)
			Exit Function
		End If
	End If
	
	// 2 mana
	If resumeIndexArray(1) = 1 Then 
		IfColor pos1(0) + 529 + manaSum, pos1(1)+364, "E0E0E", 0 Then
			TracePrint "out of mana 2, shall go to hospital"
			resume_mana(1)
			Exit Function
		End If
	End If
	
	// 3 mana
	If resumeIndexArray(0) = 1 Then 
		IfColor pos1(0) + 465 + manaSum, pos1(1)+400, "E0E0E", 0 Then
			TracePrint "out of mana 3, shall go to hospital"
			If resumeType = "ªÿ≥«" Then 
				Call go_to_heal
			Else 
				Call resume_mana(0)
			End If
			Exit Function
		End If
	End If
	
	
	
	// 4 mana
	If resumeIndexArray(2) = 1 Then 
		IfColor pos1(0)+401 + manaSum, pos1(1)+436, "E0E0E", 0 Then
			TracePrint "out of mana 4, shall go to hospital"
			resume_mana(2)
			Exit Function
		End If
	End If
	
	// 5 mana
	If resumeIndexArray(4) = 1 Then 
		IfColor pos1(0) + 337 + manaSum, pos1(1) + 472, "E0E0E", 0 Then
			TracePrint "out of mana 5, shall go to hospital"
			resume_mana(4)
			Exit Function
		End If
	End If
	
	
	TracePrint "need_heal:" & need_heal
	
End Function

Sub skill()

	IfColor pos1(0)+15, pos1(1)+36, "FF", 0 Then
		Delay 2000
	Else 
		Exit Sub
	End If
	IfColor pos1(0)+15, pos1(1)+36, "FF", 0 Then
	Else 
		Exit Sub
	End If
	
	//“—◊‘∂Ø’Ω∂∑£¨ÕÀ≥ˆ
	IfColor pos1(0)+558, pos1(1)+35, "1D21A", 0 Then
		Exit Sub
	End If
	

	IfColor pos1(0)+557, pos1(1)+115, "FF33", 0 Then
		MoveTo pos1(0)+557, pos1(1)+115
		Delay 1000
		LeftClick 1
	End If
	
	IfColor pos1(0)+507,pos1(1)+220, "800000", 0 Then
		MoveTo pos1(0)+507,pos1(1)+220
		Delay 500
		LeftClick 1
		Delay 1000
		
		MoveTo pos1(0)+539, pos1(1)+196
		Delay 1000
		LeftClick 1
		
		MoveTo pos1(0)+485, pos1(1)+378
		Delay 1000
		LeftClick 1
		
		MoveTo pos1(0)+219, pos1(1)+239
		Delay 1000
		LeftClick 1
	Else 
		MoveTo pos1(0)+507, pos1(1)+48
		Delay 1000
		LeftClick 1
		Delay 1000
	End If
	
	IfColor pos1(0)+507,pos1(1)+220, "800000", 0 Then
		MoveTo pos1(0)+507,pos1(1)+220
		Delay 500
		LeftClick 1
		Delay 1000
		
		MoveTo pos1(0)+539, pos1(1)+196
		Delay 1000
		LeftClick 1
		
		MoveTo pos1(0)+485, pos1(1)+378
		Delay 1000
		LeftClick 1
		
		MoveTo pos1(0)+219, pos1(1)+239
		Delay 1000
		LeftClick 1
	End If
End Sub


Sub move_for_fight()

	move_times = 0
	Rem move
	
	If isCheckHurt = 1 Then 
		Call checkHurt()
		Delay 20
		Call checkHurt()
	End If
	
	IfColor pos1(0)+285, pos1(1)+126, "FF00", 0 Then
		MoveTo pos1(0)+285, pos1(1)+126
		Delay 100
		
		GetColor=GetPixelColor(pos1(0)+285, pos1(1)+123)
		TracePrint GetColor
		IfColor pos1(0)+285, pos1(1)+123, "FF00", 0 Then
			TracePrint "end fright click"
			LeftClick 1
			Delay 200
		End If
	End If
	IfColor pos1(0)+13, pos1(1)+36, "FF", 0 Then
		TracePrint "fighting, break"
		Delay 3000
		Exit Sub
	End If
	
	Call base_x_y
	MoveR 0, 250
	MoveR -60 , - 60
	Delay 100
	LeftClick 1
	Delay 300
	
	Call base_x_y
	MoveR 0, 250
	MoveR 80, 80
	Delay 100
	LeftClick 1
	Delay 500
	
	move_times = move_times + 1
	TracePrint "move_times:"& move_times
	If move_times > stopWithoutFight Then 
		TracePrint "is out of the dungon, go back"
		Call stop
	End If
	Goto move
End Sub

Sub base_x_y()
	MoveTo pos1(0)+base_x, pos1(1)+base_y
End Sub
Sub go_to_heal()

	Call move_path(back_path)
	
	If sale = 1 Then 
		go_to_sale
	End If
	
	Call move_path(hospital_path)
	
	MoveTo pos1(0)+285, pos1(1)+239
	Delay 1000
	RightClick 1
	MoveTo pos(1)(0) + 330, pos(1)(1) + 12
	Delay 1000
	
	Call healing(resumeIndexArray(0))
	
	For i = 2 To team_size
		MoveTo pos(i)(0) + 330, pos(i)(1) + 12
		Delay 100
		LeftClick 1
		
		healing (resumeIndexArray(i - 1))
	Next
	
	Call move_cusor_to_person(pos1(0), pos1(1), 1)
	
	Call move_path(exit_hospital_path)
	
	move_path (exit_city_path)
	
	KeyPress "Esc", 1

	numToTidy = CInt(Form1.numToTidyInput.Text)
	healNum = healNum + 1
	Form1.healNumLabel.Caption = CStr(healNum)
End Sub

Sub move_path(path_array)

	If IsEmpty(path_array) Then 
		TracePrint "path_array is empty, skip."
		Exit Sub
	End If
	
	ind = 0
	For UBound(path_array) + 1
		Set path = path_array(ind)
		TracePrint "path type: " & path("type")
		TracePrint "path index: " & path("index")
		If path("type") = "move" Then 
			Call auto_move(path("index"))
		ElseIf path("type") = "time_move" Then
			Call auto_move_for_sale(path("index"), path("interval"))
		ElseIf path("type") = "click" Then
			Call auto_move_click(path("direction"), path("key"))
		ElseIf path("type") = "code" Then
			Call recognize_code
		End If
		
		ind = ind + 1
		Delay 1000
	Next
End Sub

Sub go_to_hospital()
	TracePrint "begin go to hospital"
	Call auto_move(0)
	TracePrint "end go to hospital"
End Sub
Sub back_to_city()
	TracePrint "begin go to city"
	call auto_move(0)
	TracePrint "end go to city"
End Sub

Sub auto_move(index)

	Call move_cusor_to_person(pos1(0),pos1(1),1)
	
	Rem waitFighting
	
	px = pos1(0) + 14
	py = pos1(1) + 36
	
	GetColor = GetPixelColor(px, py)
	TracePrint "x: " & px & ", y: " & py & ", color:" & GetColor

	IfColor pos1(0)+14, pos1(1)+36, "0000FF", 0 Then
		TracePrint "wait for fighting"
		Delay 4000
		Goto waitFighting
	End If
	
	//µ⁄N∏ˆ◊‘∂Ø—∞¬∑∆´“∆¡ø
	offset = index * 25
	UserVar wait_times=0 "µ»¥˝¥Œ ˝"
	Rem begin_move
	
	Delay 200
	IfColor pos1(0) - fix_x +451, pos1(1) - fix_y +40, "0000FF", 0 Then
	TracePrint "other"
	Else 
		Delay 1500
		TracePrint "call  map"
		KeyDown 17, 1
		KeyPress 81, 1
		KeyUp 17, 1
	End If
	
	Delay 500

	TracePrint "¥Úø™◊‘∂Ø—∞¬∑"
	//MoveTo 1475, 80
	MoveTo pos1(0)+577,pos1(1)+41
	Delay 500
	LeftClick 1
	Delay 500
	
	TracePrint "µ„ª˜“™—∞¬∑µƒº«¬º, offset: "& offset
	//MoveTo 1475, 230+offset
	MoveTo pos1(0)+571, pos1(1)+110 + offset
	Delay 500
	LeftClick 1
	
	//»Áπ˚Œﬁ∑®µΩ¥Ô£¨‘ÚÕÀ≥ˆ—∞¬∑
	IfColor pos(1)(0) + 428, pos(1)(1) + 442, "8000", 0 Then
		TracePrint "already arrived."
		Exit Sub
	End If
	
	TracePrint "÷¥––"
	MoveTo pos1(0)+449, pos1(1)+445
	Delay 500
	LeftClick 1
	
	Rem wait_arrive
	
	If check_arrived = True Then 
	//IfColor pos1(0)+269, pos1(1)+449, "FFFF", 0 Then
		//Delay 3000
		TracePrint "auto move arrived "
		
		//base_x_y 
		//MoveR 0, 250
		//Delay 500
		//RightClick 1
		
		//KeyPress "1", 1
		//KeyPress "Enter", 1
	Else 
		Rem waitFightInMove
		Delay 1000
		
		// fighting in move
		IfColor pos1(0)+14, pos1(1)+36, "0000FF", 0 Then
			Goto waitFightInMove
		End If
		
		wait_times = wait_times + 1
		TracePrint "wait arrive times:" & wait_times
		
		//N¥Œµ»¥˝∫Û£¨÷ÿ–¬÷¥––◊‘∂Ø“∆∂Ø
		If wait_times = 20000 Then 
			wait_times = 0
			TracePrint "go to begin_move"
			Goto begin_move
		Else 
			Goto wait_arrive
		End If
		
	End If
End Sub

Sub auto_move_click(direction, key)
	Call move_cusor_to_person(pos(1)(0), pos(1)(1), 1)
	
	If direction = 0 Then 
		MoveR 0 , - 50
	End If
	
	If direction = 1 Then 
		MoveR 25 , - 25
	End If
	
	If direction = 3 Then 
		MoveR 50 , 0
	End If
	
	If direction = 5 Then 
		MoveR 25 , 25
	End If
	
	If direction = 6 Then 
		MoveR 0 , 50
	End If
	
	If direction = 7 Then 
		MoveR -25 , 25
	End If
	
	If direction = 9 Then 
		MoveR -50 , 0
	End If
	
	If direction = 11 Then 
		MoveR -25 , -25
	End If
	
	Delay 500
	If key = "l" Then 
		LeftClick 1
		TracePrint "left click"
	Else 
		RightClick 1
	End If
	
End Sub

Function check_arrived

	check_arrived_offset_x1 = 322
	check_arrived_offset_y1 = 32
	
	check_arrived_offset_x2 = 321
	check_arrived_offset_y2 = 31
	
	check_arrived_offset_x3 = 40
	check_arrived_offset_y3 = 470
	
	check_arrived_offset_x4 = 540
	check_arrived_offset_y4 = 390
	
	color1_x = pos(1)(0) + check_arrived_offset_x1
	color1_y = pos(1)(1) + check_arrived_offset_y1
	color2_x = pos(1)(0) + check_arrived_offset_x2
	color2_y = pos(1)(1) + check_arrived_offset_y2
	
	color1 = GetPixelColor(color1_x, color1_y)
	color2 = GetPixelColor(color2_x, color2_y)
	//color3 = GetPixelColor(pos(1)(0) + check_arrived_offset_x3, pos(1)(1) + check_arrived_offset_y3)
	//color4 = GetPixelColor(pos(1)(0) + check_arrived_offset_x4, pos(1)(1) + check_arrived_offset_y4)
	TracePrint "color1: x: " & color1_x & ", y: " & color1_y & " " & color1
	TracePrint "color2: x: " & color2_x & ", y: " & color2_y & " " & color2
	//TracePrint "color3: x: " & pos(1)(0) + checheck_arrived_offset_x3", y: " & pos(1)(1) + checheck_arrived_offset_y3" " & color3
	//TracePrint "color4: x: " & pos(1)(0) + checheck_arrived_offset_x4", y: " & pos(1)(1) + checheck_arrived_offset_y4" " & color4
	
	IfColor pos1(0)+14, pos1(1)+36, "0000FF", 0 Then
		check_arrived = 0
		Exit Function
	End If
		
	If color1 = "000000" Then 
		check_arrived = 0
		Exit Function
	End If
	
	
	Delay 2000
	
	IfColor pos1(0)+14, pos1(1)+36, "0000FF", 0 Then
		check_arrived = 0
		Exit Function
	End If
	
	color11 = GetPixelColor(color1_x, color1_y)
	color21 = GetPixelColor(color2_x, color2_y)
	TracePrint "color1: x: " & color1_x & ", y: " & color1_y & " " & color11
	TracePrint "color2: x: " & color2_x & ", y: " & color2_y & " " & color21
	
	If color11 <> color1 or color21 <> color2 Then 
		TracePrint "not equals"
		check_arrived = False
		Exit Function
	End If
	
	Delay 2000
	
	IfColor pos1(0)+14, pos1(1)+36, "0000FF", 0 Then
		check_arrived = 0
		Exit Function
	End If
	
	color12 = GetPixelColor(color1_x, color1_y)
	color22 =GetPixelColor(color2_x, color2_y)
	TracePrint "color1: x: " & color1_x & ", y: " & color1_y & " " & color12
	TracePrint "color2: x: " & color2_x & ", y: " & color2_y & " " & color22
	
	If color12 <> color1 or color22 <> color2 Then 
		TracePrint "not equals"
		check_arrived = False
		Exit Function
	End If
	
	check_arrived = True
End Function

Sub auto_move_for_sale(index, sec)
	
	Call move_cusor_to_person(pos1(0), pos1(1), 1)
	
	If sec = 0 Then 
		sec = 5
	End If
	
	//µ⁄N∏ˆ◊‘∂Ø—∞¬∑∆´“∆¡ø
	offset = index * 25
	UserVar wait_times=0 "µ»¥˝¥Œ ˝"
	Rem begin_move
	
	Delay 200
	TracePrint pos1(0) - fix_x + 451
	TracePrint pos1(1) - fix_y +40
	GetColor = GetPixelColor(pos1(0) - fix_x + 451, pos1(1) - fix_y + 40)
	TracePrint GetColor

	IfColor pos1(0) - fix_x +451, pos1(1) - fix_y +40, "0000FF", 0 Then
	TracePrint "other"
	Else 
		Delay 1500
		TracePrint "call  map"
		KeyDown 17, 1
		KeyPress 81, 1
		KeyUp 17, 1
	End If
	
	Delay 500

	TracePrint "¥Úø™◊‘∂Ø—∞¬∑"
	//MoveTo 1475, 80
	MoveTo pos1(0)+577,pos1(1)+41
	Delay 500
	LeftClick 1
	Delay 500
	
	TracePrint "µ„ª˜“™—∞¬∑µƒº«¬º, offset: "& offset
	//MoveTo 1475, 230+offset
	MoveTo pos1(0)+571, pos1(1)+110 + offset
	Delay 500
	LeftClick 1
	
	//»Áπ˚Œﬁ∑®µΩ¥Ô£¨‘ÚÕÀ≥ˆ—∞¬∑
	IfColor pos(1)(0) + 428, pos(1)(1) + 442, "8000", 0 Then
		TracePrint "already arrived."
		Exit Sub
	End If
	
	TracePrint "÷¥––"
	MoveTo pos1(0)+449, pos1(1)+445
	Delay 500
	LeftClick 1
	
	Delay sec * 1000
End Sub

Sub speak(key)
	KeyPress key, 1
	KeyPress "Enter", 1
End Sub
Sub move_to_nurse()

	TracePrint "begin go to nurse"
	call auto_move(0)
	TracePrint "end go to nurse"
	Delay 1000
	
	MoveTo pos1(0)+285, pos1(1)+239
	Delay 1000
	RightClick 1
	Call base_x_y
	Delay 1000
	
End Sub

Sub healing(mana)
	
	//ªÿ∏¥ƒß∑®
	MoveR 0, 200
	Delay 500
	If mana = 1 Then
		LeftClick 1
	End If
	
	// «
	Delay 500
	MoveR -73 , 134
	Delay 500
	If mana = 1 Then
		LeftClick 1
	End If
	
	//»∑»œ
	MoveR 80, 0
	Delay 500
	If mana = 1 Then
		LeftClick 1
	End If
	
	
	//ªÿ∏¥—™¡ø
	MoveR 0, - 90 
	Delay 500
	LeftClick 1
	
	// «
	MoveR -80, 90 
	Delay 500
	LeftClick 1
	
	//»∑»œ
	MoveR 80, 0
	Delay 500
	LeftClick 1
	
	
	//ªÿ∏¥≥ËŒÔ
	MoveR 0, - 60 
	Delay 500
	LeftClick 1
	
	// «
	MoveR -80, 60 
	Delay 500
	LeftClick 1
	
	Delay 500
	KeyPress "Esc", 1
	Delay 500
End Sub

Sub healing_bak()
	
	//ªÿ∏¥ƒß∑®
	MoveR 0, 200
	Delay 1000
	LeftClick 1
	// «
	Delay 1000
	MoveR -80 , 134
	Delay 1000
	LeftClick 1
	//»∑»œ
	MoveR 80, 0
	Delay 1000
	LeftClick 1
	
	//ªÿ∏¥≥ËŒÔ
	MoveR 0, - 60 
	Delay 1000
	LeftClick 1
	
	// «
	MoveR -80, 60 
	Delay 1000
	LeftClick 1
End Sub

Sub exit_hospital()

	TracePrint "begin exit_hospital()"
	auto_move(1)
	TracePrint "end exit_hospital()"
	
End Sub

Sub exit_city()
	TracePrint "begin exit_city()"
	auto_move (1)

	auto_move(1)
	TracePrint "end exit_city()"
End Sub

Sub go_to_sale()
	TracePrint "sale begin"
	call move_path (sale_path)
	
	MoveTo pos1(0)+293, pos1(1)+241
	Delay 1000
	RightClick 1
	
	Delay 1000
	Call find_bargin
	
	move_path (exit_sale_path)
	TracePrint "sale begin"
End Sub

Function find_bargin()

	isSaled = 0
	
	Rem sale
	TracePrint "begin find bargin"
	KeyPress "Esc", 1

	If find_and_sale = 1 Then 
		Exit Function
	End If
	
	For i=2 to 3
		Call auto_move_for_sale (i, 5)
		KeyPress "Esc", 1
		Delay 500
	
		If find_and_sale = 1 Then 
			isSaled = 1
			Exit For
		End If
	Next
	
	If isSaled = 0 Then 
		Call stop 
	End If
End Function

Function find_and_sale

		find_and_sale = 0
		
		ind = 0
		For UBound(bargin_figure_array) + 1
			pic_file =  "Attachment:\" & bargin_figure_array(ind) & ".bmp"
			TracePrint pic_file
			FindPic 0, 0, 641, 481, pic_file, 0.4, intX, intY
			TracePrint intX
			TracePrint intY
			If intX > 0 Then 
				Exit For
			End If
			
			ind = ind + 1
		Next
		
		
		If intX > 0 And intY > 0 Then 
			TracePrint intX - 30
			TracePrint intY + 90
			MoveTo intX - 30, intY + 90
			Delay 500
			LeftClick 1
			Delay 2000
			
			base_x_y 
			MoveR 0, 250
			Delay 500
			
			MoveR 30, 20
			Delay 500
			LeftClick 1
			Delay 500
			
			MoveR -90, -60
			Delay 500
			LeftClick 1
			Delay 500
			
			MoveR 120, 80
			Delay 500
			LeftClick 1
			Delay 500
			
			MoveR -110, -70
			Delay 500
			LeftClick 1
			Delay 500
			
			//1»ÀŒÔ¬Ù
			base_x_y
			Call saling_main
			
			For i = 2 To team_size
				Call saling_slave(pos(i)(0) + 313, pos(i)(1) + 12)
				Delay 1000
			Next
							
			find_and_sale = 1
		End If
		
End Function

Sub saling_main()
	MoveR 0, 250
	MoveR 30, - 26 
	Delay 1000
	RightClick 1
	
	Delay 500
	MoveR 40, 30
	Delay 1000 
	LeftClick 1
	
	MoveR - 70 , - 180 
	Delay 500
	LeftClick 1
	
	MoveR 140, 330
	Delay 1000
	LeftClick 1
	
	MoveR -250, -20
	Delay 1000
	LeftClick 1
	
	Delay 1000
	KeyPress "Esc", 1
	
End Sub

Sub saling_slave(x, y)

	MoveTo x, y
	
	//◊Û…œ
	MoveR 0, 210
	Delay 1000
	RightClick 1
	
	MoveR 80, 60
	Delay 1000
	LeftClick 1
	
	MoveTo x, y
	//◊Û
	MoveR 60, 230
	Delay 1000
	RightClick 1
	
	MoveR 50, 30
	Delay 1000
	LeftClick 1
	
	MoveTo x, y
	//”“œ¬
	MoveR 90, 250
	Delay 1000
	RightClick 1
	
	MoveR 15,10
	Delay 1000
	LeftClick 1
	
	MoveTo x, y
	MoveR 0, 70
	Delay 1000
	LeftClick 1
	
	MoveR 130, 340
	Delay 1000
	LeftClick 1
	
	MoveR - 240 , - 20 
	Delay 1000
	LeftClick 1
	
End Sub
Sub saling()
	MoveR 0, 250
	Delay 500
	RightClick 1
	
	MoveR 0, 13
	Delay 500
	LeftClick 1
	
	MoveR - 50 , - 170 
	Delay 500
	LeftClick 1
	
	MoveR 120, 330
	Delay 500
	LeftClick 1
	
	Delay 1000
	KeyPress "Esc", 1
End Sub

Sub offline()

	Rem checkoffline
	dbcheck = 0 
	IfColor 866, 312, "200000", 0 Then
		IfColor 1045, 312, "200000", 0 Then
			If dbcheck = 0 Then 
				Delay 2000
				Goto checkoffline
			Else 
				TracePrint "offline, stop"
				EndScript
			End If
		End If
 	End If

	IfColor 1505, 312, "200000", 0 Then
		IfColor 1666, 312, "200000", 0 Then
			If dbcheck = 0 Then 
				Delay 2000
				Goto checkoffline
			Else 
				TracePrint "offline, stop"
				EndScript
			End If
		End If
 	End If
 	
 	IfColor 237, 812, "200000", 0 Then
		IfColor 399, 812, "200000", 0 Then
			If dbcheck = 0 Then 
				Delay 2000
				Goto checkoffline
			Else 
				TracePrint "offline, stop"
				EndScript
			End If
		End If
 	End If
 	
 	IfColor 837, 812, "200000", 0 Then
		IfColor 995, 812, "200000", 0 Then
			If dbcheck = 0 Then 
				Delay 2000
				Goto checkoffline
			Else 
				TracePrint "offline, stop"
				EndScript
			End If
		End If
 	End If
End Sub

Function checkHurt()
	IfColor pos1(0) + 51, pos1(1) + 76, "FFFF", 0 Then
		TracePrint "1 hurt, stop"
		EndScript
	End If
	
	IfColor pos2(0) + 51, pos2(1) + 76, "FFFF", 0 Then
		TracePrint "2 hurt, stop"
		EndScript
	End If
	
	IfColor pos3(0) + 51, pos3(1) + 76, "FFFF", 0 Then
		TracePrint "3 hurt, stop"
		EndScript
	End If
	
	IfColor pos4(0) + 51, pos4(1) + 76, "FFFF", 0 Then
		TracePrint "4 hurt, stop"
		EndScript
	End If
	
	IfColor pos5(0) + 51, pos5(1) + 76, "FFFF", 0 Then
		TracePrint "5 hurt, stop"
		EndScript
	End If
End Function

Function getWind(i)
	TracePrint "i: " & i
	TracePrint "name: " & windName(i-1)
	getWind = Plugin.Window.Find("CG°§÷¬æ¥æ≠µ‰",windName(i-1))
End Function

Function getWindPosition(i)
	wnd = getWind(i)
	Dim ret, rect
	ret = Array(0, 0)
	sRect = Plugin.Window.GetWindowRect(wnd)
	rect = Split(sRect, "|")
	TracePrint "i: " & i & ", wnd: " & wnd & ",ret: " & sRect
	//x 
	ret(0) = Clng(rect(0)) + fix_x 
	//y
	ret(1) = Clng(rect(1)) + fix_y
	getWindPosition = ret
End Function

Sub initPosition()
	pos1 = getWindPosition(1)
	pos2 = getWindPosition(2)
	pos3 = getWindPosition(3)
	pos4 = getWindPosition(4)
	pos5 = getWindPosition(5)
	
	pos(1) = pos1
	pos(2) = pos2
	pos(3) = pos3
	pos(4) = pos4
	pos(5) = pos5
	
	For i = 1 To 5
		TracePrint "p(" & i & "): x: " & pos(i)(0) & " y: " & pos(i)(1)
	Next
	
	TracePrint " init ok "
End Sub

Sub wait_if_fight

	// µ»¥˝’Ω∂∑Ω· ¯
	Rem wait_fight
	TracePrint "x:" & pos1(0) + 13
	TracePrint "y:" & pos1(1) + 36
	GetColor = GetPixelColor(pos1(0) + 13, pos1(1) + 36)
	TracePrint GetColor

	//IfColor pos1(0)+13, pos1(1)+36, "FF", 0 Then
	IfColor pos1(0) + 13, pos1(1) + 101, "FF", 0 Then
	Else
		TracePrint "wait_for_fight"
		Delay 2000
		Goto wait_fight
	End If
End Sub
Sub resume_mana(index)

	wait_if_fight
	
	retry_times = 0
	Rem find_food
	
	cusor_person 
	LeftClick 1
	Delay 1000 + rnd(1, 100)
	
	//¥Úø™ŒÔ∆∑¥∞ø⁄
	KeyDown 17, 1
	KeyPress 82, 1
	KeyUp 17, 1
	
	Delay 1500 + rnd(1, 100)
	
	point_x = - 1 
	point_y = - 1 
	finded = 0
	For row = 0 To 3
		For col = 0 To 4
			point_x = pos1(0) + 383 + col * 52
			point_y = pos1(1) + 247 + row * 53
			TracePrint "x:" & point_x
			TracePrint "y " & point_y
			GetColor=GetPixelColor(point_x,point_y)
			TracePrint GetColor
			//π¯◊”
			IfColor point_x, point_y, food_color, 0 Then
				finded = 1
				MoveTo point_x + 25, point_y
				Delay 1000 + rnd(1, 100)
				TracePrint "getted food at row:" & row & ",col:" & col
				LeftDoubleClick 1
				Delay 1000 + rnd(1, 100)
				Goto eat_food
			End If
		Next
	Next
	
	//√ª’“µΩ ±÷ÿ ‘“ª¥Œ
	If retry_times = 100 Then 
		retry_times = 1
		
		Delay 500 + rnd(1, 50)
		KeyPress "Esc", 1
		Delay 500 + rnd(1, 50)
		
		Goto find_food
	End If
	
	Rem eat_food
	If finded = 0  Then 
		TracePrint "no food, try char 2"
		Delay 1500 + rnd(1, 100)
		//πÿ±’ŒÔ∆∑¥∞ø⁄
		KeyDown 17, 1
		KeyPress 82, 1
		KeyUp 17, 1
		Delay 1000 + rnd(1, 100)
		resume_mana1 (index)
		Goto check_tidy
	End If
	
	MoveTo pos1(0) + 309 + rnd(1, 10), pos1(1) + 206 + index * 19 + rnd(1, 10)
	Delay 1000 + rnd(1, 100)
	LeftClick 1
	
	Delay 500 + rnd(1, 100)
	MoveTo pos1(0) + 300 + rnd(1, 10), pos1(1) + 218 + rnd(1, 10)
	Delay 500 + rnd(1, 100)
	LeftClick 1
	Delay 500 + rnd(1, 100)
	
	//√ø≥‘¡Ω¥Œ√Ê∞¸£¨’˚¿Ì“ª¥Œ∞¸π¸
	Rem check_tidy
	eat_times = eat_times + 1
	If eat_times > 1 Then 
		TracePrint "tidy time"
		eat_times = 0
		tidy 
		fight_times = 0
	End If
	
End Sub

Sub resume_mana1(index)

	retry_times = 0
	Rem find_food1
	
	MoveTo pos2(0)+base_x + rnd(1, 20), pos2(1)+base_y + rnd(1, 20)
	MoveR 0, 250
	Delay 1000 + rnd(1, 100)
	LeftClick 1
	
	//¥Úø™ŒÔ∆∑¥∞ø⁄
	KeyDown 17, 1
	KeyPress 82, 1
	KeyUp 17, 1
	
	Delay 500 + rnd(1, 100)
	
	point_x = - 1 
	point_y = - 1 
	finded = 0
	
	For row = 0 To 3
		For col = 0 To 4
			point_x = pos2(0) + 380 + col * 52
			point_y = pos2(1) + 247 + row * 53
			IfColor point_x, point_y, food_color, 0 Then
				finded = 1
				MoveTo point_x + 25, point_y
				Delay 1000 + rnd(1, 100)
				TracePrint "getted food at row:" & row & ",col:" & col
				LeftDoubleClick 1
				Delay 1000 + rnd(1, 100)
				Goto eat_food
			End If
		Next
	Next
	
	//√ª’“µΩ ±÷ÿ ‘“ª¥Œ
	If retry_times = 100 Then 
		retry_times = 1
		
		Delay 500 + rnd(1, 100)
		KeyPress "Esc", 1
		Delay 500 + rnd(1, 100)
		
		Goto find_food1
	End If
	
	Rem eat_food
	If finded = 0  Then 
		TracePrint "no food, end script"
		EndScript
	End If
	
	//◊™ªªº”ƒßÀ≥Œª
	change = 0
	If index = 0 Then 
		TracePrint "change index 0 to 1"
		index = 1
		change = 1
	End If
	
	If change = 0 Then 
		If index = 1 Then 
			TracePrint "change index 1 to 0"
			index = 0
			change = 1
		End If
	End If
	
	
	MoveTo pos2(0) + 309 + rnd(1, 10), pos2(1) + 206 + index * 19 + rnd(1, 10)
	Delay 1000 + rnd(1, 100)
	LeftClick 1
	
	Delay 500 + rnd(1, 100)
	MoveTo pos2(0) + 300 + rnd(1, 10), pos2(1) + 218 + rnd(1, 10)
	Delay 500 + rnd(1, 100)
	LeftClick 1
	Delay 500 + rnd(1, 100)
End Sub

//  Û±Í“∆∂ØµΩ»ÀŒÔ
Sub cusor_person
	base_x_y
	MoveR 0, 250
	Delay 500
	LeftClick 1
End Sub

Sub move_cusor_to_person(win_x, win_y, click)
	MoveTo win_x + base_x, win_y + base_y
	MoveR 0, 250
	Delay 500 + rnd(1, 50)
	
	//If click = 1 Then 
		LeftClick 1
	//End If
End Sub

// ≈–∂œ «∑Ò±ª¥´ÀÕ≥ˆ»•
Function check_out
	check_out = 0
	IfColor pos1(0) + 30, pos1(1) + 437, "FFFF", 0 Then
		IfColor pos1(0) + 35, pos1(1) + 437, "FFFF", 0 Then
			IfColor pos1(0) + 40, pos1(1) + 437, "FFFF", 0 Then
				IfColor pos1(0) + 26, pos1(1) + 447, "FFFF", 0 Then
					IfColor pos1(0) + 34, pos1(1) + 447, "FFFF", 0 Then
						IfColor pos1(0) + 39, pos1(1) + 447, "FFFF", 0 Then
							IfColor pos1(0) + 282, pos1(1) + 449, "FFFF", 0 Then
								IfColor pos1(0) + 284, pos1(1) + 447, "FFFF", 0 Then
									check_out = 1
								End If
							End If
						End If
					End If
				End If
			End If	
		End If	
	End If	
End Function

// ªÿµΩ∂¥¿Ô
Sub back_in

	auto_move (0)	
	
	TracePrint "back in okkkk"
	base_x_y 
	MoveR 0, 250
	MoveR 220 , -200
	Delay 500
	LeftClick 1
	
	KeyPress "1", 1
	KeyPress "Enter", 1
End Sub

Sub find_diamon

	got_it = 0
	
	For i = 0 To 3
		auto_move (i)
		
		For j = 0 To 10
			FindPic 0, 0, 641, 481, "Attachment:\ÀÆ.bmp", 0.2, intX, intY
			TracePrint intX
			TracePrint intY
			
			If intX > 0 Then 
				MoveTo intX, intY + 85
				Delay 500
				LeftClick 1
				Delay 6000
				Goto come_in
			End If
			Delay 1000
		Next
	Next
	
	TracePrint "can't find the diamon, restart script."
	Delay 1000
	RestartScript
	
	Rem come_in
	TracePrint "back in okkkk"
	base_x_y 
	MoveR 0, 250
	MoveR 120 , -120
	Delay 500
	LeftClick 1
	Delay 3000
	
End Sub
Sub tidy
	
	For index = 1 to team_size 
		
		TracePrint "x: " & pos(index)(0) & ", y:" & pos(index)(1)
		Delay 3000
		If index = 1 Then 
			Call move_cusor_to_person(pos(index)(0), pos(index)(1), 0)
		Else 
			call move_cusor_to_person(pos(index)(0) + rnd(1, 50) ,pos(index)(1) + rnd(1, 50), 1)
		End If
		Delay 500 + rnd(1, 50)	
		
		KeyDown 17, 1
		KeyPress 82, 1
		KeyUp 17, 1
		Delay 1000 + rnd(1, 50)
		
		ind = 0
		For UBound(marshal_array) + 1
			TracePrint marshal_array(ind)("color1")
			Set marshal_color = marshal_array(ind)
			Call move_stone(pos(index)(0), pos(index)(1), marshal_color("color1"), marshal_color("color2"))
			ind = ind + 1
		Next
		//’˚¿Ì–°¬Ãƒß Ø
		//Call move_stone(pos(index)(0), pos(index)(1), "7AE296", "7AE296")

		// µÿ
		Call move_partial(pos(index)(0), pos(index)(1), "F8EDCF", "FAFAFA")
		// ª
		Call move_partial(pos(index)(0), pos(index)(1), "FAFAFA", "B0B4F5")
		// ÀÆ
		Call move_partial(pos(index)(0), pos(index)(1), "E1E0DC", "FAFAFA")
		// ∑Á
		Call move_partial(pos(index)(0), pos(index)(1), "C2C3E0", "A5A7CC")

		ind = 0
		For UBound(drop_array) + 1
			Set drop_color = drop_array(ind)
			Call drop(pos(index)(0), pos(index)(1), drop_color("color1"), drop_color("color2"))
			ind = ind + 1
		Next
		//∂™”√´
		//Call drop(pos(index)(0), pos(index)(1), "148EB", "148EB")
		
		Delay 1000
		KeyPress "Esc", 1
	Next
	
	tidy_times = tidy_times + 1
	Form1.tityTimeLabel.Caption = Cstr(tidy_times)

	Call check_full
End Sub

Sub move_stone(win_x, win_y, color1, color2)
	group_x = - 1 
	group_y = - 1 
	For row = 0 To 3
		For col = 0 To 4
			point1_x = win_x + 403 + col * 52
			point1_y = win_y + 262 + row * 53
			point2_x = win_x + 404 + col * 52
			point2_y = win_y + 262 + row * 53
			point3_x = win_x + 417 + col * 52
			point3_y = win_y + 280 + row * 53
			
			TracePrint point2_x
			TracePrint point2_y
			GetColor = GetPixelColor(point2_x, point2_y)
			TracePrint GetColor

			IfColor point1_x, point1_y, color1, 0 Then
				IfColor point2_x, point2_y, color2, 0 Then
				//»∑»œ «“™’“µƒƒß Ø
					// «∑Ò“—∂—µ˛»˝∏ˆ
					IfColor point3_x, point3_y, "FFFF00", 0 Then
					//Ã¯π˝
					Else 
						If group_x > - 1  Then 
							//Ω´ƒß Ø“∆∂Øπ˝»•
							MoveTo point1_x, point1_y
							Delay 500 + rnd(1, 50)
							LeftClick 1
							MoveTo group_x, group_y
							Delay 500 + rnd(1, 50)
							LeftClick 1
							Delay 500 + rnd(1, 50)
							Call move_cusor_to_person(win_x,win_y,0)
							//≈–∂œ «∑Ò¬˙3∏ˆ
							IfColor group_x + 14, group_y + 18, "FFFF00", 0 Then
								group_x = - 1 
								group_y = - 1
							End If
						Else 
							//µ±«∞◊˜Œ™÷ÿµ˛µ„
							group_x = point1_x
							group_y = point1_y
						End If
					End If
				End If
			End If
		Next
	Next
End Sub

//ÀÈ∆¨
Sub move_partial(win_x, win_y, color1, color2)
	group_x = - 1 
	group_y = - 1 
	For row = 0 To 3
		For col = 0 To 4
			point1_x = win_x + 403 + col * 52
			point1_y = win_y + 262 + row * 53
			point2_x = win_x + 404 + col * 52
			point2_y = win_y + 262 + row * 53
			point3_x = win_x + 417 + col * 52
			point3_y = win_y + 280 + row * 53
			
			//TracePrint point2_x
			//TracePrint point2_y
			//GetColor = GetPixelColor(point2_x, point2_y)
			//TracePrint GetColor

			IfColor point1_x, point1_y, color1, 0 Then
				IfColor point2_x, point2_y, color2, 0 Then
					//»∑»œ «“™’“µƒƒß Ø
					// «∑Ò“—∂—µ˛»˝∏ˆ
					//IfColor point3_x, point3_y, "FFFF00", 0 Then
					//Ã¯π˝
					//Else 
						If group_x > - 1  Then 
							//Ω´ƒß Ø“∆∂Øπ˝»•
							MoveTo point1_x, point1_y
							Delay 500 + rnd(1, 50)
							LeftClick 1
							MoveTo group_x, group_y
							Delay 500 + rnd(1, 50)
							LeftClick 1
							Delay 500 + rnd(1, 50)
							Call move_cusor_to_person(win_x,win_y,0)
							//≈–∂œ «∑Ò¬˙3∏ˆ
							//IfColor group_x + 14, group_y + 18, "FFFF00", 0 Then
							//	group_x = - 1 
							//	group_y = - 1
							//End If
						Else 
							//µ±«∞◊˜Œ™÷ÿµ˛µ„
							group_x = point1_x
							group_y = point1_y
						End If
					//End If
				End If
			End If
		Next
	Next
End Sub

Sub drop(win_x, win_y, color1, color2)
	group_x = - 1 
	group_y = - 1 
	For row = 0 To 3
		For col = 0 To 4
			point1_x = win_x + 403 + col * 52
			point1_y = win_y + 262 + row * 53
			point2_x = win_x + 404 + col * 52
			point2_y = win_y + 262 + row * 53
			point3_x = win_x + 417 + col * 52
			point3_y = win_y + 280 + row * 53
			
			TracePrint point2_x
			TracePrint point2_y
			GetColor = GetPixelColor(point2_x, point2_y)
			TracePrint GetColor

			IfColor point1_x, point1_y, color1, 0 Then
				IfColor point2_x, point2_y, color2, 0 Then
					MoveTo point1_x, point1_y
					Delay 500 + rnd(1, 50)
					LeftClick 1
					
					MoveTo win_x + base_x + rnd(1, 50), win_y + base_y + rnd(1, 50)
					MoveR 0, 250
					Delay 500 + rnd(1, 50)
					LeftClick 1
				End If
			End If
		Next
	Next
End Sub

Sub check_full
	
	empty_count = 0
	
	For index = 1 to team_size 
		
		TracePrint ">>>>>>>>>>>>>>>>>>>check_full person: " & index
		TracePrint "x: " & pos(index)(0) & ", y:" & pos(index)(1)
		If index = 1 Then 
			Call move_cusor_to_person(pos(index)(0), pos(index)(1), 0)
		Else 
			call move_cusor_to_person(pos(index)(0) + rnd(1, 50) ,pos(index)(1) + rnd(1, 50), 1)
		End If
		
		Delay 500
		
		KeyDown 17, 1
		KeyPress 82, 1
		KeyUp 17, 1
		Delay 1000
		
		For row = 0 To 3
			For col = 0 To 4
				point1_x = pos(index)(0) + 403 + col * 52
				point1_y = pos(index)(1) + 262 + row * 53
				
				
				GetColor = GetPixelColor(point1_x, point1_y)
				TracePrint "x: " & point1_x & ", y: " & point1_y & " " & GetColor
	
				IfColor point1_x, point1_y, "808080", 0 Then
					
					empty_count = empty_count + 1
					
					//»∑»œ’“µΩø’∏Ò£¨÷±Ω”ÕÀ≥ˆºÏ≤È
					//TracePrint "not full, exit sub"
					//Delay 1000
					//KeyPress "Esc", 1	
					//Exit Sub
					
				End If
				
				IfColor point1_x, point1_y, "C0C0C0", 0 Then
					
					empty_count = empty_count + 1
					
					//»∑»œ’“µΩø’∏Ò£¨÷±Ω”ÕÀ≥ˆºÏ≤È
					/*
					TracePrint "not full, exit sub"
					Delay 1000
					KeyPress "Esc", 1	
					Exit Sub
					*/
					
				End If
				
				IfColor point1_x, point1_y, "A4A0A0", 0 Then
				
					empty_count = empty_count + 1
					
					//»∑»œ’“µΩø’∏Ò£¨÷±Ω”ÕÀ≥ˆºÏ≤È
					/*
					TracePrint "not full, exit sub"
					Delay 1000
					KeyPress "Esc", 1	
					Exit Sub
					*/
					
				End If
				
			Next
		Next
			
		//√ª’“µΩø’∏Ò£¨πÿ±’ŒÔ∆∑¥∞ø⁄
		Delay 500
		KeyPress "Esc", 1	
		
	Next
	
	Form1.emptyCountLabel.Caption = CStr(empty_count)
	
	If noFullHeal = 1 Then 
		If empty_count < noFullHealNum Then 
			numToTidy = CInt(Form1.numToTidyInput.Text) + elasticFightNum
			go_to_heal 
			Exit Sub
		End If
	End If
	
	If elasticFight = 1 Then 
		numToTidy = empty_count + elasticFightNum
	End If
	
	If empty_count = 0 Then 
		If stopWhenFull = 1 Then 
			//’“ÕÍÀ˘”–Ω«…´µƒ∞¸π¸∂º√ª∑¢œ÷ø’Œª£¨‘ÚÕ£÷πΩ≈±æ
			TracePrint "all package full, end script"
			Call stop	
		End If
	End If
	
	If tidy_times mod 2 = 0 Then 
		Call auto_move_click(7, "l")
		Call auto_move_click(7, "l")
	Else 
		Call auto_move_click(1, "l")
		Call auto_move_click(1, "l")
	End If
	
End Sub

Randomize
Function rnd(min, max)
	rnd = Int((max * Rnd) + min)
End Function

Function recognize_code

	Delay 1000
	call move_cusor_to_person(pos(1)(0),pos(1)(1),1)
	MoveTo pos(1)(0) + 324, pos(1)(1) + 344
	Delay 300
	LeftClick 1
	Delay 1000
	
	codeSettings = settings("code")
	
	For cStep = 0 To 2
	
		If cStep = 2 Then 
			IfColor pos(1)(0)+376, pos(1)(1)+287, "FFFFFF", 0 Then
				IfColor pos(1)(0)+376, pos(1)(1)+294, "FFFFFF", 0 Then
					IfColor pos(1)(0)+373, pos(1)(1)+294, "FFFFFF", 0 Then
						TracePrint "two second"
						Exit For
					End If
				End If
			End If
		End If
		
		For index = 0 To UBound(codeSettings)
		
			match = 1
			colorPositions = codeSettings(index)
			//TracePrint UBound (colorPositions)
			//TracePrint colorPositions(0)("x")
			
			For cInd = 0 To UBound(colorPositions)
				Set codePos = colorPositions(cInd)
				IfColor pos(1)(0)+CInt(codePos("x")) + cStep * 8, pos(1)(1)+CInt(codePos("y")), "FFFFFF", 1 Then
					//If index = 6 Then 
					//	TracePrint "unmatch"
					//	TracePrint codePos("x")
					//	TracePrint codePos("y")
					//End If
					match = 0
					Exit For
				End If
			Next
			
			If match = 1 Then 
				If index = 3 Then 
					IfColor pos(1)(0)+357 + cStep * 8, pos(1)(1)+287, "FFFFFF", 0 Then
						index = 8
					End If
				End If
				
				KeyPress CStr(index), 1
				Delay 500
				Exit For
			End If
		Next
	Next
	
	Delay 500
	KeyPress "Enter", 1
	
	Delay 1000
	IfColor pos(1)(0) + 365, pos(1)(1) + 142, "DCF9ED", 1 Then
		TracePrint "recognize fail, exit script"
		Call auto_move_for_sale(1, 20)
		Call stop
	End If
End Function

Sub stop
	TracePrint "exitscript"
	Import "mailVbs.vbs"
	Call send(teammateNameArray(0))
	ExitScript
End Sub
